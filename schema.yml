openapi: 3.0.3
info:
  title: Comments API
  version: 1.0.0
  description: REST API для системы комментариев блога
paths:
  /api/articles/:
    get:
      operationId: articles_list
      description: ViewSet для статей
      tags:
      - articles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
          description: ''
    post:
      operationId: articles_create
      description: ViewSet для статей
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Article'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /api/articles/{id}/:
    get:
      operationId: articles_retrieve
      description: ViewSet для статей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - articles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    put:
      operationId: articles_update
      description: ViewSet для статей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Article'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    patch:
      operationId: articles_partial_update
      description: ViewSet для статей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    delete:
      operationId: articles_destroy
      description: ViewSet для статей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - articles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/comments/:
    get:
      operationId: comments_list
      description: ViewSet для комментариев
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: comments_create
      description: ViewSet для комментариев
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/comments/{id}/:
    get:
      operationId: comments_retrieve
      description: ViewSet для комментариев
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      description: ViewSet для комментариев
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      description: ViewSet для комментариев
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      description: ViewSet для комментариев
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Article:
      type: object
      description: Сериализатор для статьи с первыми тремя уровнями комментариев
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/RootComment'
          readOnly: true
      required:
      - comments
      - id
      - text
    Children:
      type: object
      description: Промежуточный сериализатор вложенных комментариев для статьи
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - author
      - children
      - created_at
      - id
      - text
    Comment:
      type: object
      description: Сериализатор для получения всего дерева комментариев
      properties:
        id:
          type: integer
          readOnly: true
        article:
          type: integer
        text:
          type: string
        author:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
      required:
      - article
      - author
      - created_at
      - id
      - text
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        article:
          type: integer
        parent:
          type: integer
          nullable: true
      required:
      - article
      - author
      - created_at
      - id
      - text
    PatchedArticle:
      type: object
      description: Сериализатор для статьи с первыми тремя уровнями комментариев
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/RootComment'
          readOnly: true
    PatchedComment:
      type: object
      description: Сериализатор для получения всего дерева комментариев
      properties:
        id:
          type: integer
          readOnly: true
        article:
          type: integer
        text:
          type: string
        author:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    RootComment:
      type: object
      description: Сериализатор для вершины комментариев
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Children'
          readOnly: true
      required:
      - author
      - children
      - created_at
      - id
      - text
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
